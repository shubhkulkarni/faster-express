name: Auto Publish on Push

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "README.md"
      - "docs/**"
      - ".github/**"

jobs:
  auto-publish:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -q "package.json"; then
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            PREV_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
            if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            else
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.new_version }}
          release_name: Release v${{ steps.version-check.outputs.new_version }}
          draft: false
          prerelease: false
