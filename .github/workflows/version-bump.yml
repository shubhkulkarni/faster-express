name: Version Bump and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      publish:
        description: "Publish to NPM after version bump"
        required: true
        default: true
        type: boolean

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Bump version
        run: npm version ${{ github.event.inputs.version_type }} --no-git-tag-version

      - name: Get new version
        id: version
        run: echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ steps.version.outputs.new_version }}"
          git tag v${{ steps.version.outputs.new_version }}
          git push origin master
          git push origin v${{ steps.version.outputs.new_version }}

      - name: Publish to NPM
        if: ${{ github.event.inputs.publish == 'true' }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: ${{ github.event.inputs.publish == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release v${{ steps.version.outputs.new_version }}
          body: |
            ## Changes in v${{ steps.version.outputs.new_version }}

            - Automated release via GitHub Actions

            ## Installation
            ```bash
            npm install -g faster-express@${{ steps.version.outputs.new_version }}
            ```
          draft: false
          prerelease: false
